// src/han/strokes.ts
// 기본 획 템플릿 (0~1 정규 좌표, 각 자모의 로컬 박스에서 정의)
export type P = [number, number];
export type Stroke = { points: P[]; kind: 'line'|'bezier' };
export type Glyph = { strokes: Stroke[] };

// 직선 유틸
const line = (a:P,b:P):Stroke => ({kind:'line', points:[a,b]});
// 사각형(ㅁ 등) 유틸 - 시계방향
export const rect = (x:number,y:number,w:number,h:number, close=true):Stroke[] => {
  const p1:P=[x,y], p2:P=[x+w,y], p3:P=[x+w,y+h], p4:P=[x,y+h];
  const s:Stroke[] = [line(p1,p2), line(p2,p3), line(p3,p4)];
  if(close) s.push(line(p4,p1));
  return s;
};

// 원(ㅇ) 근사 - 8분할 폴리라인
export const circle = (cx:number, cy:number, r:number, seg=16):Stroke => {
  const pts:P[] = [];
  for(let i=0;i<=seg;i++){
    const t = (i/seg)*Math.PI*2;
    pts.push([cx + Math.cos(t)*r, cy + Math.sin(t)*r]);
  }
  return {kind:'line', points:pts};
};

// ===== 자음 템플릿 (초성/종성 공용 기본형) =====
export const CONSONANTS: Record<string, Glyph> = {
  'ㄱ': { strokes: [ line([0.10,0.40],[0.70,0.40]), line([0.70,0.40],[0.70,0.85]) ] },
  'ㄴ': { strokes: [ line([0.10,0.20],[0.10,0.85]), line([0.10,0.85],[0.70,0.85]) ] },
  'ㄷ': { strokes: [ line([0.10,0.25],[0.70,0.25]), line([0.10,0.25],[0.10,0.85]), line([0.10,0.85],[0.70,0.85]) ] },
  'ㄹ': { strokes: [ line([0.10,0.25],[0.55,0.25]), line([0.10,0.25],[0.10,0.50]), line([0.10,0.50],[0.55,0.50]), line([0.55,0.50],[0.55,0.85]), line([0.20,0.85],[0.55,0.85]) ] },
  'ㅁ': { strokes: rect(0.12,0.28,0.58,0.54,true) },
  'ㅂ': { strokes: [ ...rect(0.12,0.35,0.58,0.40,true), line([0.12,0.30],[0.70,0.30]) ] },
  'ㅅ': { strokes: [ line([0.15,0.35],[0.42,0.10]), line([0.69,0.35],[0.42,0.10]) ] },
  'ㅇ': { strokes: [ circle(0.42,0.55,0.28,20) ] },
  'ㅈ': { strokes: [ line([0.15,0.35],[0.42,0.10]), line([0.69,0.35],[0.42,0.10]), line([0.20,0.45],[0.64,0.45]) ] },
  'ㅊ': { strokes: [ line([0.15,0.35],[0.42,0.10]), line([0.69,0.35],[0.42,0.10]), line([0.20,0.28],[0.64,0.28]) ] },
  'ㅋ': { strokes: [ line([0.10,0.35],[0.68,0.35]), line([0.68,0.35],[0.68,0.85]), line([0.30,0.55],[0.68,0.55]) ] },
  'ㅌ': { strokes: [ line([0.10,0.30],[0.70,0.30]), line([0.10,0.30],[0.10,0.85]), line([0.10,0.85],[0.70,0.85]), line([0.20,0.55],[0.60,0.55]) ] },
  'ㅍ': { strokes: [ ...rect(0.12,0.35,0.58,0.40,true), line([0.20,0.55],[0.62,0.55]) ] },
  'ㅎ': { strokes: [ circle(0.42,0.55,0.26,20), line([0.18,0.30],[0.66,0.30]) ] },
};

// 종성(받침) 간략 보정(낮고 넓게)
export const FINAL_TWEAK: Record<string, Glyph> = {
  'ㄱ': { strokes: [ line([0.10,0.20],[0.70,0.20]), line([0.70,0.20],[0.70,0.60]) ] },
  'ㄴ': { strokes: [ line([0.12,0.20],[0.12,0.58]), line([0.12,0.58],[0.70,0.58]) ] },
  'ㄷ': { strokes: [ line([0.12,0.24],[0.70,0.24]), line([0.12,0.24],[0.12,0.60]), line([0.12,0.60],[0.70,0.60]) ] },
  'ㅇ': { strokes: [ circle(0.42,0.42,0.20,18) ] },
  // 나머지는 기본형 재사용
};


// ===== 모음 템플릿 =====
export const VOWELS: Record<string, Glyph> = {
  // 세로형(오른쪽에 붙는 계열): ㅏㅑㅓㅕㅣ
  'ㅣ': { strokes: [ line([0.50,0.15],[0.50,0.85]) ] },
  'ㅏ': { strokes: [ line([0.35,0.15],[0.35,0.85]), line([0.35,0.50],[0.75,0.50]) ] },
  'ㅑ': { strokes: [ line([0.33,0.15],[0.33,0.85]), line([0.33,0.42],[0.72,0.42]), line([0.33,0.60],[0.69,0.60]) ] },
  'ㅓ': { strokes: [ line([0.65,0.15],[0.65,0.85]), line([0.25,0.50],[0.65,0.50]) ] },
  'ㅕ': { strokes: [ line([0.67,0.15],[0.67,0.85]), line([0.28,0.42],[0.67,0.42]), line([0.31,0.60],[0.67,0.60]) ] },

  // 가로형(위/아래 붙는 계열): ㅗㅛㅜㅠㅡ
  'ㅡ': { strokes: [ line([0.20,0.55],[0.80,0.55]) ] },
  'ㅗ': { strokes: [ line([0.20,0.40],[0.80,0.40]), line([0.50,0.40],[0.50,0.82]) ] },
  'ㅛ': { strokes: [ line([0.20,0.38],[0.80,0.38]), line([0.38,0.38],[0.38,0.80]), line([0.62,0.38],[0.62,0.80]) ] },
  'ㅜ': { strokes: [ line([0.20,0.70],[0.80,0.70]), line([0.50,0.30],[0.50,0.70]) ] },
  'ㅠ': { strokes: [ line([0.20,0.72],[0.80,0.72]), line([0.38,0.30],[0.38,0.72]), line([0.62,0.30],[0.62,0.72]) ] },
};